#########
# Step 1
Code affected: none
Created this file.

#########
# Step 2
Code affected: all .java files
Reformatted using the Google Java style formatter.

#########
# Step 3
Code affected: Fish.turnAround
Flaw: unnecessary if, leading to duplicate code.
Fix: replaced if statement with a single assignment statement.

#########
# Step 4
Code affected: Bubble.draw, Bubble.drawString
Flaw: Wrong order of parameters x and y.
Fix: Changed the order of parameters x and y.

#########
# Step 5
Code affected: Bubble.floatStraightUp
Flaw: Redundant assignment.
Fix: Removed redundant assignment.

#########
# Step 6
Code affected: Bubble.floatStraightUp, Bubble.floatLeftUp, Bubble.floatRightUp, Bubble
Flaw: Repeated code segments in several methods.
Fix: Added helper method Bubble.grow, and replaced the code segments with the method call.

#########
# Step 7
Code affected: Bubble.grow
Flaw: Used class attribute d that was not meant to be used (for that purpose).
Fix: Added local variable rd in place of class attribute d.

#########
# Step 8
Code affected: Fish
Flaw: Ambiguous attribute names r and c.
Fix: Changed r and c to x and y.

#########
# Step 9
Code affected: FishTankManager.update, Bubble
Flaw: Redundant methods. Unnecessary class attribute.
Fix: Combined float methods into one. Changed FishTankManager.update to accommodate for the change.
Removed unnecessary class attribute d, added local variable in update instead.

#########
# Step 10
Code affected: all .java files except MainActivity and MainThread
Flaw: Class attributes were public.
Fix: Changed class attributes to private or protected.

#########
# Step 11
Code affected: Bubble, Fish, HungryFish, Seaweed, FishTankManager
Flaw: Lots of redundant code that could be shortened with polymorphism.
Fix: Added abstract superclass FishTankItem that Bubble, Fish, HungryFish and Seaweed inherit from.
Shortened redundant code that required typecasting. Changed Bubble.floatBubble to .move to
accommodate for the change.

#########
# Step 12
Code affected: Bubble, Fish, HungryFish, Seaweed, FishTankManager, FishTankItem
Flaw: Confusing and inconsistently named coordinate system.
Fix: Changed coordinate attributes' identifiers of all FishTankItem classes to x and y. Added
setLocation to all FishTankItem classes' constructors. Fixed cases where x and y are incorrectly
placed/swapped.

#########
# Step 13
Code affected: Seaweed.draw, Seaweed.drawString, FishTankManager.createTankItems
Flaw: Repetitive and hard-to-read if code segment. x and y swapped.
Fix: Cleaned up if segment, swapped x and y to represent the correct coordinates, changed the
parameters in createTankItems to accommodate for swapping x and y, so that it looks the same.

#########
# Step 14
Code affected: Fish.reverseAppearance
Flaw: Inefficient reverse method.
Fix: Changed code in reverse method of Fish to a more efficient way.

#########
# Step 15
Code affected: HungryFish.reverseAppearance
Flaw: Inefficient reverse method and redundant if statement.
Fix: Changed code in reverse method of HungryFish to a more efficient way and removed the redundant
if statement.

#########
# Step 16
Code affected: all .java files except MainActivity and MainThread
Flaw: Methods and attributes not as private as possible. Unnecessary attribute declarations.
Fix: Changed methods and attributes to the most secure access modifier possible. Removed unnecessary
attribute declarations.

#########
# Step 17
Code affected: FishTankManager, Fish.blowBubble, HungryFish.blowBubble
Flaw: Redundant 2D array of FishTankItems.
Fix: Changed 2D array to 1D ArrayList and changed previous assignment statements to ArrayList.add()
statements.

#########
# Step 18
Code affected: FishTankManager.update, .move methods of all FishTankItem classes
Flaw: ArrayList of FishTankItem's was static, so no more than one fish tank can be displayed.
Fix: Changed myLittleFishies to private. Modified move methods to return an array of int - empty
meaning no bubble was blown, length 2 representing coordinates of bubble blown. So Bubble items can
be added in an instance of FishTankManager.

#########
# Step 19
Code affected: Fish.move, Fish.drawString, HungryFish.move, HungryFish.drawString
Flaw: x and y attributes were swapped.
Fix: Changed x and y attributes to the correct assignments.

#########
# Step 20 / Step N-1
Code affected: FishTankItem, Fish, Bubble, HungryFish, Seaweed, FishTankManager
Flaw: Items in the fish tank can go outside of the grid.
Fix: Implemented Turnable interface to denote items that can turn around. Checks if the item is out
of bound every time it moves and adjust them accordingly - if item is a turnable object (i.e. Fish
or HungryFish), manually move them back in bound and turn them around; if item is not turnable
(idle), remove them from the ArrayList when they've moved outside. Added getters for FishTankItems.
Removed 2D array in Step 17.

#########
# Step N
Code affected: FishTankManager, HungryFish
Flaw: N/A
Fix: Added new FishTankItem snail. It moves more slowly than a fish, is more likely to sink down and
it will get eaten by a hungry fish if they are at the same location. Adjusted HungryFish's behavior
- more likely to move up and down.

#########
# Step N+1
Code affected: FishTankManager.checkBounds
Flaw: Wrong criteria for going off grid to the top.
Fix: Changed from y > gridHeight to y <= 0.

#########
# Step N+1
Code affected: FishTankManager
Flaw: Unnecessary getter methods and class access modifier not the most private.
Fix: Removed unnecessary getter methods and changed FishTankManager to package private.